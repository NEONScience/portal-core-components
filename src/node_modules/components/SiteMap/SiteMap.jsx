import React from 'react';
import PropTypes from 'prop-types';

import { makeStyles } from '@material-ui/core/styles';

import 'leaflet/dist/leaflet.css';
import { Map, TileLayer, ScaleControl } from 'react-leaflet';

const useStyles = makeStyles(() => ({
  map: {
    width: '100%',
    height: '0px', // Necessary to set a fixed aspect ratio from props (using paddingBottom)
    overflow: 'hidden',
  },
}));

// 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'

const SiteMap = (props) => {
  const {
    aspectRatio,
    sites,
  } = props;

  console.log(sites);

  const classes = useStyles();
  const position = [47.229, -112.382];

  return (
    <Map
      className={classes.map}
      style={{ paddingBottom: `${aspectRatio * 100}%` }}
      center={position}
      maxZoom={10}
      minZoom={2}
      zoom={3}
    >
      <TileLayer url="https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png" />
      <ScaleControl imperial metric updateWhenIdle />
    </Map>
  );
};

SiteMap.propTypes = {
  aspectRatio: PropTypes.number,
  sites: PropTypes.arrayOf(
    PropTypes.shape({
      siteCode: PropTypes.string.isRequired,
      siteDescription: PropTypes.string.isRequired,
      siteLatitude: PropTypes.number.isRequired,
      siteLongitude: PropTypes.number.isRequired,
      siteType: PropTypes.string,
      siteTerrain: PropTypes.string,
      domainCode: PropTypes.string,
      stateType: PropTypes.string,
    }),
  ),
};

SiteMap.defaultProps = {
  aspectRatio: 0.75,
  sites: null,
};

export default SiteMap;
