{
  "name": "portal-core-components",
  "version": "2.11.0",
  "main": "./lib/index.js",
  "private": true,
  "homepage": "http://localhost:3010/core-components-next",
  "dependencies": {
    "@emotion/react": "^11.13.0",
    "@emotion/styled": "^11.13.0",
    "@fortawesome/fontawesome-svg-core": "^6.6.0",
    "@fortawesome/free-regular-svg-icons": "^6.6.0",
    "@fortawesome/free-solid-svg-icons": "^6.6.0",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "@mui/icons-material": "^5.16.6",
    "@mui/lab": "^5.0.0-alpha.173",
    "@mui/material": "^5.16.6",
    "@mui/styles": "^5.16.6",
    "@mui/x-date-pickers": "^7.12.0",
    "@stomp/rx-stomp": "^2.0.0",
    "@stomp/stompjs": "^7.0.0",
    "@types/dateformat": "^5.0.2",
    "@types/leaflet": "^1.9.12",
    "@types/lodash": "^4.17.7",
    "@types/react": "^18.3.3",
    "@types/react-copy-to-clipboard": "^5.0.7",
    "@types/react-dom": "^18.3.0",
    "@types/react-router": "^5.1.20",
    "@types/react-router-dom": "^5.3.3",
    "@types/sockjs-client": "^1.5.4",
    "@types/ua-parser-js": "^0.7.39",
    "@types/wicg-file-system-access": "^2023.10.5",
    "clsx": "^2.1.1",
    "core-js": "^3.38.0",
    "d3-drag": "^3.0.0",
    "d3-selection": "^3.0.0",
    "d3-transition": "^3.0.1",
    "dateformat": "^5.0.3",
    "dom-to-image": "^2.6.0",
    "dygraphs": "~2.2.1",
    "file-saver": "^2.0.5",
    "highlight.js": "^11.10.0",
    "history": "^5.3.0",
    "html-react-parser": "^5.1.12",
    "leaflet": "~1.9.4",
    "lodash": "^4.17.21",
    "material-table": "^2.0.5",
    "moment": "^2.30.1",
    "next": "^14.2.5",
    "node-lzw": "^0.3.1",
    "papaparse": "^5.4.1",
    "pdfjs-dist": "~4.5.136",
    "prop-types": "^15.8.1",
    "react": "^18.3.1",
    "react-copy-to-clipboard": "^5.1.0",
    "react-dom": "^18.3.1",
    "react-error-boundary": "^4.0.13",
    "react-id-generator": "^3.0.2",
    "react-leaflet": "^4.2.1",
    "react-markdown": "^8.0.7",
    "react-router": "^6.26.0",
    "react-router-dom": "^6.26.0",
    "react-select": "^5.8.0",
    "redux": "^4.2.1",
    "redux-observable": "^2.0.0",
    "remark-gfm": "^3.0.1",
    "rxjs": "^7.8.1",
    "sockjs-client": "^1.6.1",
    "tinycolor2": "^1.6.0",
    "ua-parser-js": "^1.0.38",
    "universal-cookie": "^7.2.0",
    "zod": "^3.23.8"
  },
  "peerDependencies": {
    "commander": "^12.1.0",
    "cssnano": "^7.0.4",
    "jsdom": "^24.1.1",
    "node-fetch": "^3.3.2",
    "postcss": "^8.4.41",
    "prettier": "^3.3.3",
    "worker-loader": "^3.0.8"
  },
  "peerDependenciesMeta": {
    "commander": {
      "optional": true
    },
    "cssnano": {
      "optional": true
    },
    "jsdom": {
      "optional": true
    },
    "node-fetch": {
      "optional": true
    },
    "postcss": {
      "optional": true
    },
    "prettier": {
      "optional": true
    },
    "worker-loader": {
      "optional": true
    }
  },
  "devDependencies": {
    "@babel/cli": "^7.24.8",
    "@babel/core": "^7.25.2",
    "@babel/plugin-transform-class-properties": "^7.24.7",
    "@babel/plugin-transform-object-assign": "^7.24.7",
    "@babel/plugin-transform-object-rest-spread": "^7.24.7",
    "@babel/plugin-transform-private-methods": "7.24.7",
    "@babel/plugin-transform-private-property-in-object": "^7.24.7",
    "@babel/preset-env": "^7.25.3",
    "@babel/preset-react": "^7.24.7",
    "@babel/preset-typescript": "^7.24.7",
    "@emotion/babel-plugin": "^11.12.0",
    "@jest/globals": "^29.7.0",
    "@testing-library/react": "^16.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.1",
    "@typescript-eslint/parser": "^8.0.1",
    "commander": "^12.1.0",
    "cssnano": "^7.0.4",
    "eslint": "^8.57.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-next": "^14.2.5",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.9.0",
    "eslint-plugin-react": "^7.35.0",
    "express": "^4.19.2",
    "html-loader": "^5.1.0",
    "jest": "^29.7.0",
    "jest-canvas-mock": "^2.5.2",
    "jest-environment-jsdom": "^29.7.0",
    "jsdom": "^24.1.1",
    "node-fetch": "^3.3.2",
    "postcss": "^8.4.41",
    "prettier": "^3.3.3",
    "react-test-renderer": "^18.3.1",
    "typescript": "~5.5.4",
    "worker-loader": "^3.0.8"
  },
  "overrides": {
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "material-table": {
      "@mui/styles": "^5.16.6",
      "jspdf": "^2.5.1",
      "jspdf-autotable": "^3.8.2",
      "prop-types": "^15.8.1",
      "react-beautiful-dnd": "^13.1.1",
      "fast-deep-equal": "^3.1.3"
    }
  },
  "scripts": {
    "start": "next dev",
    "start:next-start": "next start",
    "start:prod": "node server.js",
    "build": "npm run build:next",
    "build:next": "next build",
    "build:post-process": "node ./scripts/prettify-index.js --cwd-relative-build-dir-path=\"build\"",
    "test": "npx jest --config jest.config.js",
    "test:clear-cache": "npx jest --clearCache",
    "test:updateSnapshots": "npx jest --config jest.config.js --updateSnapshot",
    "lint": "(npx eslint src/ --ext .js,.jsx,.ts,.tsx || true) && exit 0",
    "lint:fix": "(npx eslint --fix src/ --ext .js,.jsx,.ts,.tsx || true) && exit 0",
    "lib": "npm run lib:pre-process && npm run lib:babel-build && npm run lib:types && npm run lib:post-cleanup",
    "lib:babel-build": "NODE_ENV=production && babel ./src/lib_components --out-dir lib --extensions \".js,.jsx,.ts,.tsx\" --copy-files --no-copy-ignored",
    "lib:clean": "(rm -r ./lib || true) && (rm -r ./src/lib_components/remoteAssets/* || true)",
    "lib:clean-build": "npm run lib:clean && npm run lib",
    "lib:types": "npx tsc --project tsconfig.d.json",
    "lib:pre-process": "node ./scripts/lib/lib-cache-remote-assets.js --prettify-index --css-replace-relative-urls",
    "lib:post-cleanup": "npm run lib:post-clean-styleGuides && npm run lib:post-clean-img && npm run lib:post-clean-tests && node ./scripts/lib/lib-fix-worker-babel.js",
    "lib:post-clean-styleGuides": "rm ./lib/components/**/StyleGuide.*",
    "lib:post-clean-img": "rm -r ./lib/components/SiteMap/png && rm -r ./lib/components/SiteMap/svg_source && rm -r ./lib/components/DataThemeIcon/svg_source",
    "lib:post-clean-tests": "rm -r ./lib/*/__tests__ && rm -r ./lib/*/*/__tests__",
    "checks": "npm run lib && npm run lint && npm run test && npm run build",
    "checks:docker": "npm run build:docker-image && npm run lib:docker && npm run test:docker && npm run build:docker",
    "start:docker": "docker run --rm --tty --interactive --volume=/$(pwd):/app/src --volume=/app/src/node_modules --workdir=/app/src --publish=3010:3010 portal-core-components:latest-builder npm run start",
    "start:docker-prod": "docker run --rm --tty --interactive --volume=/$(pwd):/app/src --volume=/app/src/node_modules --workdir=/app/src --publish=3000:3000 portal-core-components:latest-builder npm run start:prod",
    "build:docker-clean": "docker image rm portal-core-components:latest-builder",
    "build:docker-build-image": "docker buildx build --no-cache --tag portal-core-components:latest-builder --file ./build.Dockerfile .",
    "build:docker-image": "(npm run build:docker-clean || true) && npm run build:docker-build-image",
    "build:docker": "docker run --rm --tty --interactive --env GENERATE_SOURCEMAP=false --env NODE_OPTIONS=--max_old_space_size=4096 --volume=/$(pwd):/app/src --volume=/app/src/node_modules --workdir=/app/src portal-core-components:latest-builder npm run build",
    "lib:docker": "docker run --rm --tty --interactive --volume=/$(pwd):/app/src --volume=/app/src/node_modules --workdir=/app/src portal-core-components:latest-builder npm run lib",
    "test:docker": "docker run --rm --tty --interactive --volume=/$(pwd):/app/src --volume=/app/src/node_modules --workdir=/app/src portal-core-components:latest-builder npm run test:docker-command",
    "test:docker-update-snapshots": "docker run --rm --tty --interactive --volume=/$(pwd):/app/src --volume=/app/src/node_modules --workdir=/app/src portal-core-components:latest-builder npm run test:docker-command-update-snapshots",
    "test:docker-command": "npm run lint && npm run test",
    "test:docker-command-update-snapshots": "npm run lint && npm run test:updateSnapshots"
  }
}
