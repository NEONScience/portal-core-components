/**
 * AvailabilityGrid generator function
 * @param {object} config - all arguments, see below:
 * * @param {object} svgRef Pointer to an <svg> element generated by useRef()
 * * @param {object} data View object containing name, rows, and getLabel functions
 * * @param {object} sites
 * * * @param {array} value Array of site code strings to show as selected
 * * * @param {array} validValues Array of site code strings known to have some data
 *         in the data set. This is only superfluous when the view is "site". Otherwise,
 *         for example, clicking the summary view row has no way of knowing the specific
 *         sites that actually apply when "selecting all" for this particular product
 * * @param {function} setSitesValue Setter from useState hook defined in
 *       parent to set state for sites
 * * @param {object} dateRange
 * * * @param {array} value Array of exactly two "YYYY-MM" strings
 * * * @param {array} validValues Array of exactly two "YYYY-MM" strings
 *       representing the limits of available / selectable data for the product
 * * @param {function} setDateRangeValue Setter from useState hook defined in
 *       parent to set state for dateRange
 * * @param {boolean} selectionEnabled Whether to hook up interactions to allow
 *       user selection of sites
 */
export function AvailabilityGrid(config: any): null | undefined;
export namespace SVG {
    export const MIN_ROWS: number;
    export const MIN_CELLS: number;
    export const CELL_WIDTH: number;
    export const CELL_HEIGHT: number;
    export const CELL_PADDING: number;
    export const YEAR_PADDING: number;
    export const END_PADDING: number;
    export const CELL_RX: number;
    export const LABEL_FONT_SIZE: number;
    export const GROUPED_LABEL_WIDTH: number;
    export const UNGROUPED_LABEL_WIDTH: number;
    export const DATE_RANGE_HANDLE_WIDTH: number;
    export const DATE_RANGE_MASK_WIDTH: number;
}
export const yearMonths: string[];
